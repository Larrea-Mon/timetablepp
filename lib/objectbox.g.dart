// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'Models/holidayperiod.dart';
import 'Models/lesson.dart';
import 'Models/settingsbatch.dart';
import 'Models/subject.dart';
import 'Models/subjecttime.dart';
import 'Models/termperiod.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 8580854761514221371),
      name: 'HolidayPeriod',
      lastPropertyId: const obx_int.IdUid(4, 2319572583605026503),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2897001669363904909),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5218522932801161067),
            name: 'start',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6066369750214495565),
            name: 'end',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2319572583605026503),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 3837368679985327568),
      name: 'Lesson',
      lastPropertyId: const obx_int.IdUid(5, 6354421064310499119),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1126128243147593373),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1102212534974716332),
            name: 'hour',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 916558853735177842),
            name: 'minute',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5216802402994332804),
            name: 'day',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6354421064310499119),
            name: 'subjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 8338900709183299503),
            relationTarget: 'Subject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3744144578641230598),
      name: 'Subject',
      lastPropertyId: const obx_int.IdUid(6, 2056781321402505831),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3164545630065121224),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2652228241084836952),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5331165141955187264),
            name: 'abv',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4758388099081066784),
            name: 'teacher',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5137719230628209988),
            name: 'place',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2056781321402505831),
            name: 'color',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 4022893133229700797),
      name: 'SubjectTime',
      lastPropertyId: const obx_int.IdUid(3, 3512963349698658758),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6852247997759590650),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1746992985605304413),
            name: 'hour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3512963349698658758),
            name: 'minute',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 8770315610770758503),
      name: 'TermPeriod',
      lastPropertyId: const obx_int.IdUid(3, 3192627378815697225),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6182410182531718172),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5875171906117540201),
            name: 'start',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3192627378815697225),
            name: 'end',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 1394606018714506811),
      name: 'SettingsBatch',
      lastPropertyId: const obx_int.IdUid(24, 5761305450991132851),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2913842438045222602),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7612856395423466994),
            name: 'appActiveTheme',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2380285000361470013),
            name: 'widgetActiveTheme',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8716076441801428007),
            name: 'isMondayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7416606653076765869),
            name: 'isTuesdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 110580738220500317),
            name: 'isWednesdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3540444230138283693),
            name: 'isThursdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7579351411599530050),
            name: 'isFridayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5658798479320078405),
            name: 'isSaturdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 3179588705729704977),
            name: 'isSundayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8481401657505330177),
            name: 'firstDayOfTheWeek',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 3243519915968758427),
            name: 'sendNotifsNextLesson',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 2317602204116279282),
            name: 'timeSendNotifsNextLesson',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 5727023552341271590),
            name: 'sendNotifsNextHomework',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 7083816533479401061),
            name: 'timeSendNotifsHomeworkAfterClass',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 5199238861051797907),
            name: 'timeSendNotifsHomeworkFreeDaysHour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 7923646921431651540),
            name: 'timeSendNotifsHomeworkFreeDaysMinute',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 1028596755060113782),
            name: 'sendNotifsNextExam',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 8290366056985994140),
            name: 'daysSendNotifsNextExam',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 9114647169376636416),
            name: 'enableAutoSilence',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 4496436887677194396),
            name: 'minutesAutosilence',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 5111428637400359396),
            name: 'lessonsPerDay',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 3884263845346654801),
            name: 'lessonsLength',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 5761305450991132851),
            name: 'lessonsBreak',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(7, 1394606018714506811),
      lastIndexId: const obx_int.IdUid(1, 8338900709183299503),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    HolidayPeriod: obx_int.EntityDefinition<HolidayPeriod>(
        model: _entities[0],
        toOneRelations: (HolidayPeriod object) => [],
        toManyRelations: (HolidayPeriod object) => {},
        getId: (HolidayPeriod object) => object.id,
        setId: (HolidayPeriod object, int id) {
          object.id = id;
        },
        objectToFB: (HolidayPeriod object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.start?.millisecondsSinceEpoch);
          fbb.addInt64(2, object.end?.millisecondsSinceEpoch);
          fbb.addOffset(3, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final startValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final endValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final startParam = startValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startValue);
          final endParam = endValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endValue);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = HolidayPeriod(startParam, endParam, nameParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Lesson: obx_int.EntityDefinition<Lesson>(
        model: _entities[1],
        toOneRelations: (Lesson object) => [object.subject],
        toManyRelations: (Lesson object) => {},
        getId: (Lesson object) => object.id,
        setId: (Lesson object, int id) {
          object.id = id;
        },
        objectToFB: (Lesson object, fb.Builder fbb) {
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt32(1, object.hour);
          fbb.addInt32(2, object.minute);
          fbb.addInt32(3, object.day);
          fbb.addInt64(4, object.subject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Lesson()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..hour = const fb.Int32Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..minute =
                const fb.Int32Reader().vTableGet(buffer, rootOffset, 8, 0)
            ..day = const fb.Int32Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.subject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.subject.attach(store);
          return object;
        }),
    Subject: obx_int.EntityDefinition<Subject>(
        model: _entities[2],
        toOneRelations: (Subject object) => [],
        toManyRelations: (Subject object) => {},
        getId: (Subject object) => object.id,
        setId: (Subject object, int id) {
          object.id = id;
        },
        objectToFB: (Subject object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final abvOffset =
              object.abv == null ? null : fbb.writeString(object.abv!);
          final teacherOffset =
              object.teacher == null ? null : fbb.writeString(object.teacher!);
          final placeOffset =
              object.place == null ? null : fbb.writeString(object.place!);
          final colorOffset = fbb.writeString(object.color);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, abvOffset);
          fbb.addOffset(3, teacherOffset);
          fbb.addOffset(4, placeOffset);
          fbb.addOffset(5, colorOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final abvParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final teacherParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final placeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final colorParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 14, '');
          final object = Subject(
              nameParam, abvParam, teacherParam, placeParam, colorParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    SubjectTime: obx_int.EntityDefinition<SubjectTime>(
        model: _entities[3],
        toOneRelations: (SubjectTime object) => [],
        toManyRelations: (SubjectTime object) => {},
        getId: (SubjectTime object) => object.id,
        setId: (SubjectTime object, int id) {
          object.id = id;
        },
        objectToFB: (SubjectTime object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.hour);
          fbb.addInt64(2, object.minute);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = SubjectTime()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..hour = const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..minute =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);

          return object;
        }),
    TermPeriod: obx_int.EntityDefinition<TermPeriod>(
        model: _entities[4],
        toOneRelations: (TermPeriod object) => [],
        toManyRelations: (TermPeriod object) => {},
        getId: (TermPeriod object) => object.id,
        setId: (TermPeriod object, int id) {
          object.id = id;
        },
        objectToFB: (TermPeriod object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.start?.millisecondsSinceEpoch);
          fbb.addInt64(2, object.end?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final startValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final endValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final startParam = startValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startValue);
          final endParam = endValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endValue);
          final object = TermPeriod(start: startParam, end: endParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    SettingsBatch: obx_int.EntityDefinition<SettingsBatch>(
        model: _entities[5],
        toOneRelations: (SettingsBatch object) => [],
        toManyRelations: (SettingsBatch object) => {},
        getId: (SettingsBatch object) => object.id,
        setId: (SettingsBatch object, int id) {
          object.id = id;
        },
        objectToFB: (SettingsBatch object, fb.Builder fbb) {
          final appActiveThemeOffset = fbb.writeString(object.appActiveTheme);
          fbb.startTable(25);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, appActiveThemeOffset);
          fbb.addInt64(2, object.widgetActiveTheme);
          fbb.addBool(3, object.isMondayActive);
          fbb.addBool(4, object.isTuesdayActive);
          fbb.addBool(5, object.isWednesdayActive);
          fbb.addBool(6, object.isThursdayActive);
          fbb.addBool(7, object.isFridayActive);
          fbb.addBool(8, object.isSaturdayActive);
          fbb.addBool(9, object.isSundayActive);
          fbb.addInt64(10, object.firstDayOfTheWeek);
          fbb.addBool(11, object.sendNotifsNextLesson);
          fbb.addInt64(12, object.timeSendNotifsNextLesson);
          fbb.addBool(13, object.sendNotifsNextHomework);
          fbb.addInt64(14, object.timeSendNotifsHomeworkAfterClass);
          fbb.addInt64(15, object.timeSendNotifsHomeworkFreeDaysHour);
          fbb.addInt64(16, object.timeSendNotifsHomeworkFreeDaysMinute);
          fbb.addBool(17, object.sendNotifsNextExam);
          fbb.addInt64(18, object.daysSendNotifsNextExam);
          fbb.addBool(19, object.enableAutoSilence);
          fbb.addInt64(20, object.minutesAutosilence);
          fbb.addInt64(21, object.lessonsPerDay);
          fbb.addInt64(22, object.lessonsLength);
          fbb.addInt64(23, object.lessonsBreak);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = SettingsBatch()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..appActiveTheme = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '')
            ..widgetActiveTheme =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0)
            ..isMondayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false)
            ..isTuesdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false)
            ..isWednesdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false)
            ..isThursdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false)
            ..isFridayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 18, false)
            ..isSaturdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false)
            ..isSundayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 22, false)
            ..firstDayOfTheWeek =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0)
            ..sendNotifsNextLesson =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false)
            ..timeSendNotifsNextLesson =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0)
            ..sendNotifsNextHomework =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 30, false)
            ..timeSendNotifsHomeworkAfterClass =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0)
            ..timeSendNotifsHomeworkFreeDaysHour =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 34, 0)
            ..timeSendNotifsHomeworkFreeDaysMinute =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 36, 0)
            ..sendNotifsNextExam =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 38, false)
            ..daysSendNotifsNextExam =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 40, 0)
            ..enableAutoSilence =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 42, false)
            ..minutesAutosilence =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 44, 0)
            ..lessonsPerDay =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 46, 0)
            ..lessonsLength =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 48, 0)
            ..lessonsBreak =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 50, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [HolidayPeriod] entity fields to define ObjectBox queries.
class HolidayPeriod_ {
  /// See [HolidayPeriod.id].
  static final id =
      obx.QueryIntegerProperty<HolidayPeriod>(_entities[0].properties[0]);

  /// See [HolidayPeriod.start].
  static final start =
      obx.QueryDateProperty<HolidayPeriod>(_entities[0].properties[1]);

  /// See [HolidayPeriod.end].
  static final end =
      obx.QueryDateProperty<HolidayPeriod>(_entities[0].properties[2]);

  /// See [HolidayPeriod.name].
  static final name =
      obx.QueryStringProperty<HolidayPeriod>(_entities[0].properties[3]);
}

/// [Lesson] entity fields to define ObjectBox queries.
class Lesson_ {
  /// See [Lesson.id].
  static final id =
      obx.QueryIntegerProperty<Lesson>(_entities[1].properties[0]);

  /// See [Lesson.hour].
  static final hour =
      obx.QueryIntegerProperty<Lesson>(_entities[1].properties[1]);

  /// See [Lesson.minute].
  static final minute =
      obx.QueryIntegerProperty<Lesson>(_entities[1].properties[2]);

  /// See [Lesson.day].
  static final day =
      obx.QueryIntegerProperty<Lesson>(_entities[1].properties[3]);

  /// See [Lesson.subject].
  static final subject =
      obx.QueryRelationToOne<Lesson, Subject>(_entities[1].properties[4]);
}

/// [Subject] entity fields to define ObjectBox queries.
class Subject_ {
  /// See [Subject.id].
  static final id =
      obx.QueryIntegerProperty<Subject>(_entities[2].properties[0]);

  /// See [Subject.name].
  static final name =
      obx.QueryStringProperty<Subject>(_entities[2].properties[1]);

  /// See [Subject.abv].
  static final abv =
      obx.QueryStringProperty<Subject>(_entities[2].properties[2]);

  /// See [Subject.teacher].
  static final teacher =
      obx.QueryStringProperty<Subject>(_entities[2].properties[3]);

  /// See [Subject.place].
  static final place =
      obx.QueryStringProperty<Subject>(_entities[2].properties[4]);

  /// See [Subject.color].
  static final color =
      obx.QueryStringProperty<Subject>(_entities[2].properties[5]);
}

/// [SubjectTime] entity fields to define ObjectBox queries.
class SubjectTime_ {
  /// See [SubjectTime.id].
  static final id =
      obx.QueryIntegerProperty<SubjectTime>(_entities[3].properties[0]);

  /// See [SubjectTime.hour].
  static final hour =
      obx.QueryIntegerProperty<SubjectTime>(_entities[3].properties[1]);

  /// See [SubjectTime.minute].
  static final minute =
      obx.QueryIntegerProperty<SubjectTime>(_entities[3].properties[2]);
}

/// [TermPeriod] entity fields to define ObjectBox queries.
class TermPeriod_ {
  /// See [TermPeriod.id].
  static final id =
      obx.QueryIntegerProperty<TermPeriod>(_entities[4].properties[0]);

  /// See [TermPeriod.start].
  static final start =
      obx.QueryDateProperty<TermPeriod>(_entities[4].properties[1]);

  /// See [TermPeriod.end].
  static final end =
      obx.QueryDateProperty<TermPeriod>(_entities[4].properties[2]);
}

/// [SettingsBatch] entity fields to define ObjectBox queries.
class SettingsBatch_ {
  /// See [SettingsBatch.id].
  static final id =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[0]);

  /// See [SettingsBatch.appActiveTheme].
  static final appActiveTheme =
      obx.QueryStringProperty<SettingsBatch>(_entities[5].properties[1]);

  /// See [SettingsBatch.widgetActiveTheme].
  static final widgetActiveTheme =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[2]);

  /// See [SettingsBatch.isMondayActive].
  static final isMondayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[3]);

  /// See [SettingsBatch.isTuesdayActive].
  static final isTuesdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[4]);

  /// See [SettingsBatch.isWednesdayActive].
  static final isWednesdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[5]);

  /// See [SettingsBatch.isThursdayActive].
  static final isThursdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[6]);

  /// See [SettingsBatch.isFridayActive].
  static final isFridayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[7]);

  /// See [SettingsBatch.isSaturdayActive].
  static final isSaturdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[8]);

  /// See [SettingsBatch.isSundayActive].
  static final isSundayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[9]);

  /// See [SettingsBatch.firstDayOfTheWeek].
  static final firstDayOfTheWeek =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[10]);

  /// See [SettingsBatch.sendNotifsNextLesson].
  static final sendNotifsNextLesson =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[11]);

  /// See [SettingsBatch.timeSendNotifsNextLesson].
  static final timeSendNotifsNextLesson =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[12]);

  /// See [SettingsBatch.sendNotifsNextHomework].
  static final sendNotifsNextHomework =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[13]);

  /// See [SettingsBatch.timeSendNotifsHomeworkAfterClass].
  static final timeSendNotifsHomeworkAfterClass =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[14]);

  /// See [SettingsBatch.timeSendNotifsHomeworkFreeDaysHour].
  static final timeSendNotifsHomeworkFreeDaysHour =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[15]);

  /// See [SettingsBatch.timeSendNotifsHomeworkFreeDaysMinute].
  static final timeSendNotifsHomeworkFreeDaysMinute =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[16]);

  /// See [SettingsBatch.sendNotifsNextExam].
  static final sendNotifsNextExam =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[17]);

  /// See [SettingsBatch.daysSendNotifsNextExam].
  static final daysSendNotifsNextExam =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[18]);

  /// See [SettingsBatch.enableAutoSilence].
  static final enableAutoSilence =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[5].properties[19]);

  /// See [SettingsBatch.minutesAutosilence].
  static final minutesAutosilence =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[20]);

  /// See [SettingsBatch.lessonsPerDay].
  static final lessonsPerDay =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[21]);

  /// See [SettingsBatch.lessonsLength].
  static final lessonsLength =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[22]);

  /// See [SettingsBatch.lessonsBreak].
  static final lessonsBreak =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[5].properties[23]);
}
