// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'Models/holidayperiod.dart';
import 'Models/lesson.dart';
import 'Models/settingsbatch.dart';
import 'Models/subject.dart';
import 'Models/subjecttime.dart';
import 'Models/termperiod.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 6712300024642865997),
      name: 'TermPeriod',
      lastPropertyId: const obx_int.IdUid(3, 7628532944252634798),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3735083573369474155),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6810973221594398258),
            name: 'start',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7628532944252634798),
            name: 'end',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 3033383584820465524),
      name: 'HolidayPeriod',
      lastPropertyId: const obx_int.IdUid(4, 651313185732812970),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3314223274298000639),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1800696407142293280),
            name: 'start',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3066113653228354995),
            name: 'end',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 651313185732812970),
            name: 'name',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 7039596356983433900),
      name: 'Subject',
      lastPropertyId: const obx_int.IdUid(7, 8244514203172194503),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 577877316626608401),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8193245059149668343),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4789907192747017289),
            name: 'abv',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1407323447579881166),
            name: 'teacher',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 5604493318830112940),
            name: 'place',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8244514203172194503),
            name: 'color',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 9066198403731461066),
      name: 'Lesson',
      lastPropertyId: const obx_int.IdUid(5, 7816044147552149826),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4867351427623262150),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6377000438013814085),
            name: 'hour',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7477443440026383016),
            name: 'minute',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 651344471440634396),
            name: 'day',
            type: 5,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7816044147552149826),
            name: 'subjectId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(2, 8369609502199462194),
            relationTarget: 'Subject')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 7962595628123035930),
      name: 'SettingsBatch',
      lastPropertyId: const obx_int.IdUid(27, 7563713612122021013),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3822177447485087621),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 6301400020867184160),
            name: 'firstDayOfTheWeek',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7003384279367014382),
            name: 'sendNotifsNextLesson',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 740098166399107518),
            name: 'timeSendNotifsNextLesson',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 8983760934677357504),
            name: 'sendNotifsNextHomework',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7141868142157793745),
            name: 'timeSendNotifsHomeworkAfterClass',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1919005861197611804),
            name: 'sendNotifsNextExam',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6254122234311399506),
            name: 'daysSendNotifsNextExam',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5337302094719174081),
            name: 'enableAutoSilence',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 2793398206601424504),
            name: 'minutesAutosilence',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 5783053863073903254),
            name: 'lessonsPerDay',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 1242706005274499902),
            name: 'lessonsLength',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 4012179022551700003),
            name: 'lessonsBreak',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 6027581562774258379),
            name: 'isMondayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 5112757132913238187),
            name: 'isTuesdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 455142664254308780),
            name: 'isWednesdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 6280600683648540867),
            name: 'isThursdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 5105959611675902343),
            name: 'isFridayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 3810537354444841221),
            name: 'isSaturdayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 2969465162820710256),
            name: 'isSundayActive',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 8070058903277532290),
            name: 'timeSendNotifsHomeworkFreeDaysHour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 5672706178154757184),
            name: 'timeSendNotifsHomeworkFreeDaysMinute',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(26, 73517361895304590),
            name: 'appActiveTheme',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(27, 7563713612122021013),
            name: 'widgetActiveTheme',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(10, 7165403485464021256),
      name: 'SubjectTime',
      lastPropertyId: const obx_int.IdUid(3, 4407822383198214790),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6183662035754576763),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3562131586575814635),
            name: 'hour',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4407822383198214790),
            name: 'minute',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(10, 7165403485464021256),
      lastIndexId: const obx_int.IdUid(2, 8369609502199462194),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [
        3550581915661698429,
        5641477025173493033,
        7387174656048122430,
        2545113248978641425
      ],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        4875495904651296124,
        2495712168504459199,
        6733068527520113198,
        8853223232895115220,
        8676671176066478731,
        4136888799807000002,
        5662718307907723849,
        6181656001915519347,
        1159009269193963203,
        4812326025030964172,
        7214797018055737408,
        2707582517948775339,
        4310842985319946914,
        3637776464582519531,
        1520117690305473185,
        6965828538278559551,
        6342334289272328411,
        258324090967465752,
        8555219835403082987,
        1242233559764430895,
        4716857800487018992,
        7508359457946523139
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    TermPeriod: obx_int.EntityDefinition<TermPeriod>(
        model: _entities[0],
        toOneRelations: (TermPeriod object) => [],
        toManyRelations: (TermPeriod object) => {},
        getId: (TermPeriod object) => object.id,
        setId: (TermPeriod object, int id) {
          object.id = id;
        },
        objectToFB: (TermPeriod object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.start?.millisecondsSinceEpoch);
          fbb.addInt64(2, object.end?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final startValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final endValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final startParam = startValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startValue);
          final endParam = endValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endValue);
          final object = TermPeriod(start: startParam, end: endParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    HolidayPeriod: obx_int.EntityDefinition<HolidayPeriod>(
        model: _entities[1],
        toOneRelations: (HolidayPeriod object) => [],
        toManyRelations: (HolidayPeriod object) => {},
        getId: (HolidayPeriod object) => object.id,
        setId: (HolidayPeriod object, int id) {
          object.id = id;
        },
        objectToFB: (HolidayPeriod object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.start?.millisecondsSinceEpoch);
          fbb.addInt64(2, object.end?.millisecondsSinceEpoch);
          fbb.addOffset(3, nameOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final startValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 6);
          final endValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final startParam = startValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startValue);
          final endParam = endValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endValue);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = HolidayPeriod(startParam, endParam, nameParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Subject: obx_int.EntityDefinition<Subject>(
        model: _entities[2],
        toOneRelations: (Subject object) => [],
        toManyRelations: (Subject object) => {},
        getId: (Subject object) => object.id,
        setId: (Subject object, int id) {
          object.id = id;
        },
        objectToFB: (Subject object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final abvOffset =
              object.abv == null ? null : fbb.writeString(object.abv!);
          final teacherOffset =
              object.teacher == null ? null : fbb.writeString(object.teacher!);
          final placeOffset =
              object.place == null ? null : fbb.writeString(object.place!);
          final colorOffset = fbb.writeString(object.color);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, abvOffset);
          fbb.addOffset(3, teacherOffset);
          fbb.addOffset(4, placeOffset);
          fbb.addOffset(6, colorOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final abvParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final teacherParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final placeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final colorParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final object = Subject(
              nameParam, abvParam, teacherParam, placeParam, colorParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Lesson: obx_int.EntityDefinition<Lesson>(
        model: _entities[3],
        toOneRelations: (Lesson object) => [object.subject],
        toManyRelations: (Lesson object) => {},
        getId: (Lesson object) => object.id,
        setId: (Lesson object, int id) {
          object.id = id;
        },
        objectToFB: (Lesson object, fb.Builder fbb) {
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addInt32(1, object.hour);
          fbb.addInt32(2, object.minute);
          fbb.addInt32(3, object.day);
          fbb.addInt64(4, object.subject.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Lesson()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..hour = const fb.Int32Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..minute =
                const fb.Int32Reader().vTableGet(buffer, rootOffset, 8, 0)
            ..day = const fb.Int32Reader().vTableGet(buffer, rootOffset, 10, 0);
          object.subject.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          object.subject.attach(store);
          return object;
        }),
    SettingsBatch: obx_int.EntityDefinition<SettingsBatch>(
        model: _entities[4],
        toOneRelations: (SettingsBatch object) => [],
        toManyRelations: (SettingsBatch object) => {},
        getId: (SettingsBatch object) => object.id,
        setId: (SettingsBatch object, int id) {
          object.id = id;
        },
        objectToFB: (SettingsBatch object, fb.Builder fbb) {
          fbb.startTable(28);
          fbb.addInt64(0, object.id);
          fbb.addInt64(3, object.firstDayOfTheWeek);
          fbb.addBool(4, object.sendNotifsNextLesson);
          fbb.addInt64(5, object.timeSendNotifsNextLesson);
          fbb.addBool(6, object.sendNotifsNextHomework);
          fbb.addInt64(7, object.timeSendNotifsHomeworkAfterClass);
          fbb.addBool(8, object.sendNotifsNextExam);
          fbb.addInt64(9, object.daysSendNotifsNextExam);
          fbb.addBool(10, object.enableAutoSilence);
          fbb.addInt64(11, object.minutesAutosilence);
          fbb.addInt64(12, object.lessonsPerDay);
          fbb.addInt64(13, object.lessonsLength);
          fbb.addInt64(14, object.lessonsBreak);
          fbb.addBool(15, object.isMondayActive);
          fbb.addBool(16, object.isTuesdayActive);
          fbb.addBool(17, object.isWednesdayActive);
          fbb.addBool(18, object.isThursdayActive);
          fbb.addBool(19, object.isFridayActive);
          fbb.addBool(20, object.isSaturdayActive);
          fbb.addBool(21, object.isSundayActive);
          fbb.addInt64(22, object.timeSendNotifsHomeworkFreeDaysHour);
          fbb.addInt64(23, object.timeSendNotifsHomeworkFreeDaysMinute);
          fbb.addInt64(25, object.appActiveTheme);
          fbb.addInt64(26, object.widgetActiveTheme);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = SettingsBatch()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..firstDayOfTheWeek =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0)
            ..sendNotifsNextLesson =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false)
            ..timeSendNotifsNextLesson =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0)
            ..sendNotifsNextHomework =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 16, false)
            ..timeSendNotifsHomeworkAfterClass =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0)
            ..sendNotifsNextExam =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 20, false)
            ..daysSendNotifsNextExam =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0)
            ..enableAutoSilence =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 24, false)
            ..minutesAutosilence =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0)
            ..lessonsPerDay =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 28, 0)
            ..lessonsLength =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 30, 0)
            ..lessonsBreak =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0)
            ..isMondayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 34, false)
            ..isTuesdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 36, false)
            ..isWednesdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 38, false)
            ..isThursdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 40, false)
            ..isFridayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 42, false)
            ..isSaturdayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 44, false)
            ..isSundayActive =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 46, false)
            ..timeSendNotifsHomeworkFreeDaysHour =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 48, 0)
            ..timeSendNotifsHomeworkFreeDaysMinute =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 50, 0)
            ..appActiveTheme =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 54, 0)
            ..widgetActiveTheme =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 56, 0);

          return object;
        }),
    SubjectTime: obx_int.EntityDefinition<SubjectTime>(
        model: _entities[5],
        toOneRelations: (SubjectTime object) => [],
        toManyRelations: (SubjectTime object) => {},
        getId: (SubjectTime object) => object.id,
        setId: (SubjectTime object, int id) {
          object.id = id;
        },
        objectToFB: (SubjectTime object, fb.Builder fbb) {
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.hour);
          fbb.addInt64(2, object.minute);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = SubjectTime()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..hour = const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0)
            ..minute =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [TermPeriod] entity fields to define ObjectBox queries.
class TermPeriod_ {
  /// See [TermPeriod.id].
  static final id =
      obx.QueryIntegerProperty<TermPeriod>(_entities[0].properties[0]);

  /// See [TermPeriod.start].
  static final start =
      obx.QueryDateProperty<TermPeriod>(_entities[0].properties[1]);

  /// See [TermPeriod.end].
  static final end =
      obx.QueryDateProperty<TermPeriod>(_entities[0].properties[2]);
}

/// [HolidayPeriod] entity fields to define ObjectBox queries.
class HolidayPeriod_ {
  /// See [HolidayPeriod.id].
  static final id =
      obx.QueryIntegerProperty<HolidayPeriod>(_entities[1].properties[0]);

  /// See [HolidayPeriod.start].
  static final start =
      obx.QueryDateProperty<HolidayPeriod>(_entities[1].properties[1]);

  /// See [HolidayPeriod.end].
  static final end =
      obx.QueryDateProperty<HolidayPeriod>(_entities[1].properties[2]);

  /// See [HolidayPeriod.name].
  static final name =
      obx.QueryStringProperty<HolidayPeriod>(_entities[1].properties[3]);
}

/// [Subject] entity fields to define ObjectBox queries.
class Subject_ {
  /// See [Subject.id].
  static final id =
      obx.QueryIntegerProperty<Subject>(_entities[2].properties[0]);

  /// See [Subject.name].
  static final name =
      obx.QueryStringProperty<Subject>(_entities[2].properties[1]);

  /// See [Subject.abv].
  static final abv =
      obx.QueryStringProperty<Subject>(_entities[2].properties[2]);

  /// See [Subject.teacher].
  static final teacher =
      obx.QueryStringProperty<Subject>(_entities[2].properties[3]);

  /// See [Subject.place].
  static final place =
      obx.QueryStringProperty<Subject>(_entities[2].properties[4]);

  /// See [Subject.color].
  static final color =
      obx.QueryStringProperty<Subject>(_entities[2].properties[5]);
}

/// [Lesson] entity fields to define ObjectBox queries.
class Lesson_ {
  /// See [Lesson.id].
  static final id =
      obx.QueryIntegerProperty<Lesson>(_entities[3].properties[0]);

  /// See [Lesson.hour].
  static final hour =
      obx.QueryIntegerProperty<Lesson>(_entities[3].properties[1]);

  /// See [Lesson.minute].
  static final minute =
      obx.QueryIntegerProperty<Lesson>(_entities[3].properties[2]);

  /// See [Lesson.day].
  static final day =
      obx.QueryIntegerProperty<Lesson>(_entities[3].properties[3]);

  /// See [Lesson.subject].
  static final subject =
      obx.QueryRelationToOne<Lesson, Subject>(_entities[3].properties[4]);
}

/// [SettingsBatch] entity fields to define ObjectBox queries.
class SettingsBatch_ {
  /// See [SettingsBatch.id].
  static final id =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[0]);

  /// See [SettingsBatch.firstDayOfTheWeek].
  static final firstDayOfTheWeek =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[1]);

  /// See [SettingsBatch.sendNotifsNextLesson].
  static final sendNotifsNextLesson =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[2]);

  /// See [SettingsBatch.timeSendNotifsNextLesson].
  static final timeSendNotifsNextLesson =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[3]);

  /// See [SettingsBatch.sendNotifsNextHomework].
  static final sendNotifsNextHomework =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[4]);

  /// See [SettingsBatch.timeSendNotifsHomeworkAfterClass].
  static final timeSendNotifsHomeworkAfterClass =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[5]);

  /// See [SettingsBatch.sendNotifsNextExam].
  static final sendNotifsNextExam =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[6]);

  /// See [SettingsBatch.daysSendNotifsNextExam].
  static final daysSendNotifsNextExam =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[7]);

  /// See [SettingsBatch.enableAutoSilence].
  static final enableAutoSilence =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[8]);

  /// See [SettingsBatch.minutesAutosilence].
  static final minutesAutosilence =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[9]);

  /// See [SettingsBatch.lessonsPerDay].
  static final lessonsPerDay =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[10]);

  /// See [SettingsBatch.lessonsLength].
  static final lessonsLength =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[11]);

  /// See [SettingsBatch.lessonsBreak].
  static final lessonsBreak =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[12]);

  /// See [SettingsBatch.isMondayActive].
  static final isMondayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[13]);

  /// See [SettingsBatch.isTuesdayActive].
  static final isTuesdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[14]);

  /// See [SettingsBatch.isWednesdayActive].
  static final isWednesdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[15]);

  /// See [SettingsBatch.isThursdayActive].
  static final isThursdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[16]);

  /// See [SettingsBatch.isFridayActive].
  static final isFridayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[17]);

  /// See [SettingsBatch.isSaturdayActive].
  static final isSaturdayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[18]);

  /// See [SettingsBatch.isSundayActive].
  static final isSundayActive =
      obx.QueryBooleanProperty<SettingsBatch>(_entities[4].properties[19]);

  /// See [SettingsBatch.timeSendNotifsHomeworkFreeDaysHour].
  static final timeSendNotifsHomeworkFreeDaysHour =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[20]);

  /// See [SettingsBatch.timeSendNotifsHomeworkFreeDaysMinute].
  static final timeSendNotifsHomeworkFreeDaysMinute =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[21]);

  /// See [SettingsBatch.appActiveTheme].
  static final appActiveTheme =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[22]);

  /// See [SettingsBatch.widgetActiveTheme].
  static final widgetActiveTheme =
      obx.QueryIntegerProperty<SettingsBatch>(_entities[4].properties[23]);
}

/// [SubjectTime] entity fields to define ObjectBox queries.
class SubjectTime_ {
  /// See [SubjectTime.id].
  static final id =
      obx.QueryIntegerProperty<SubjectTime>(_entities[5].properties[0]);

  /// See [SubjectTime.hour].
  static final hour =
      obx.QueryIntegerProperty<SubjectTime>(_entities[5].properties[1]);

  /// See [SubjectTime.minute].
  static final minute =
      obx.QueryIntegerProperty<SubjectTime>(_entities[5].properties[2]);
}
